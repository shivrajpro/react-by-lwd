{"version":3,"sources":["services/AuthService.js","store/actions/PostTypes.js","store/reducers/PostsReducer.js","store/reducers/AuthReducers.js","store/store.js","store/selectors/AuthSelectors.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js","store/actions/AuthActions.js"],"names":["API_KEY","signUp","email","password","payload","returnSecureToken","axios","post","signIn","formatError","errorResponse","error","message","saveTokenInLocalStorage","tokenDetails","expiryDate","Date","getTime","expiresIn","localStorage","setItem","JSON","stringify","deleteTokenFromLocalStorage","removeItem","runLogoutTimer","dispatch","expirationTime","history","setTimeout","console","log","logoutAction","push","checkAutoLogin","tokenDetailsStr","getItem","parse","todaysDate","signInSuccess","CREATE_POST_ACTION","CREATE_POST_SUCCESS","GET_POSTS_SUCCESS","EDIT_POST_SUCCESS","DELETE_POST_SUCCESS","initialState","posts","auth","successMessage","errorMessage","showLoading","middleware","applyMiddleware","thunk","composedEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","state","action","type","id","Math","random","title","description","postIndex","findIndex","newPosts","filter","p","SIGN_UP_FAILED","SIGN_IN_FAILED","LOGOUT_ACTION","SIGN_UP_SUCCESS","SIGN_IN_SUCCESS","TOGGLE_LOADING_ACTION","store","createStore","isAuthenticated","idToken","withRouter","connect","isAuth","props","useDispatch","className","to","onClick","e","SignUp","lazy","SignIn","Home","Posts","CreatePost","useEffect","routes","path","component","exact","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","signUpAction","response","data","catch","errorMsg","finally","toggleLoadingAction","status","signInAction"],"mappings":"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","file":"static/js/main.78de7880.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { logoutAction, signInSuccess } from \"../store/actions/AuthActions\";\r\n\r\nconst API_KEY = 'AIzaSyC_b_yfhdwTY_JeXPkAZ-WiAtvmBtKGJDE';\r\nconst authUrl = 'https://identitytoolkit.googleapis.com/v1';\r\n\r\nexport function signUp(email, password) {\r\n    const payload = {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n    }\r\n    return axios.post(\r\n        `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`,\r\n        payload\r\n    )\r\n}\r\n\r\nexport function signIn(email, password){\r\n    const payload = {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n    }\r\n    return axios.post(`${authUrl}/accounts:signInWithPassword?key=${API_KEY}`, payload)\r\n}\r\nexport function formatError(errorResponse) {\r\n    switch (errorResponse.error.message) {\r\n        case 'EMAIL_EXISTS':\r\n            return 'email already exists';\r\n        case 'INVALID_LOGIN_CREDENTIALS' :\r\n            return 'invalid email id or password'\r\n        default: return '';\r\n    }\r\n}\r\n\r\nexport function saveTokenInLocalStorage(tokenDetails) {\r\n    tokenDetails.expiryDate = new Date(new Date().getTime() + tokenDetails.expiresIn*1000);\r\n    localStorage.setItem('userDetails',JSON.stringify(tokenDetails));\r\n}\r\n\r\nexport function deleteTokenFromLocalStorage() {\r\n    localStorage.removeItem('userDetails');\r\n}\r\n\r\nexport function runLogoutTimer(dispatch, expirationTime, history) {\r\n    // expirationTime is in seconds\r\n    setTimeout(() => {\r\n        console.log('runLogoutTimer');\r\n        dispatch(logoutAction());\r\n        history.push('/sign-in')\r\n    }, expirationTime * 1000);\r\n}\r\n\r\nexport function checkAutoLogin(dispatch, history) {\r\n    const tokenDetailsStr = localStorage.getItem('userDetails');\r\n\r\n    if(!tokenDetailsStr){\r\n        dispatch(logoutAction(history));\r\n        return;\r\n    }\r\n\r\n    const tokenDetails = JSON.parse(tokenDetailsStr);\r\n    const expiryDate = new Date(tokenDetails.expiryDate);\r\n    const todaysDate = new Date();\r\n\r\n    if(todaysDate > expiryDate){\r\n        dispatch(logoutAction(history));\r\n        return;\r\n    }\r\n\r\n    dispatch(signInSuccess(tokenDetails));\r\n\r\n    const expirationTime = expiryDate.getTime() - todaysDate.getTime();\r\n    // console.log('expirationTime',expirationTime / 1000);\r\n    runLogoutTimer(dispatch, expirationTime / 1000, history);\r\n}","export const CREATE_POST_ACTION = '[Post Actions] create post';\r\nexport const CREATE_POST_SUCCESS = '[Post Actions] create post success';\r\nexport const GET_POSTS = '[Post Actions] get posts';\r\nexport const GET_POSTS_SUCCESS = '[Post Actions] get posts success';\r\nexport const EDIT_POST = '[Post Actions] edit post';\r\nexport const EDIT_POST_SUCCESS = '[Post Actions] edit post success';\r\nexport const DELETE_POST = '[Post Actions] delete post';\r\nexport const DELETE_POST_SUCCESS = '[Post Actions] delete post success';","import {\r\n    CREATE_POST_ACTION,\r\n    CREATE_POST_SUCCESS,\r\n    DELETE_POST_SUCCESS,\r\n    EDIT_POST_SUCCESS,\r\n    GET_POSTS_SUCCESS\r\n} from \"../actions/PostTypes\";\r\n\r\n// posts: [\r\n//     { id: '1', title: 'first post', description: 'first description' },\r\n//     { id: '2', title: 'second post', description: 'second description' },\r\n// ]\r\nconst initialState = {\r\n    posts: []\r\n}\r\n\r\nexport default function PostsReducer(state = initialState, action) {\r\n    //reducers are pure function we cannot make async calls here\r\n    if (action.type === CREATE_POST_ACTION) {\r\n        const post = { id: Math.random(), title: 'third post', description: 'third description' }\r\n\r\n        const posts = [...state.posts];\r\n        posts.push(post);\r\n\r\n        return {\r\n            ...state,\r\n            posts\r\n        }\r\n    }\r\n\r\n    if (action.type === GET_POSTS_SUCCESS) {\r\n        return {\r\n            ...state,\r\n            posts: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === CREATE_POST_SUCCESS) {\r\n        const posts = [...state.posts];\r\n        posts.push(action.payload);\r\n\r\n        return {\r\n            ...state,\r\n            posts\r\n        }\r\n    }\r\n\r\n    if (action.type === EDIT_POST_SUCCESS) {\r\n        const posts = [...state.posts];\r\n        const postIndex = posts.findIndex(\r\n            (post) => post.id === action.payload.id,\r\n        );\r\n\r\n        posts[postIndex] = action.payload;\r\n        return {\r\n            ...state,\r\n            posts\r\n        }\r\n    }\r\n\r\n    if (action.type === DELETE_POST_SUCCESS) {\r\n        const posts = [...state.posts];\r\n        const newPosts = posts.filter(p => p.id !== action.payload);\r\n\r\n        return {\r\n            ...state,\r\n            posts: newPosts\r\n        }\r\n    }\r\n\r\n    return state;\r\n}","import { LOGOUT_ACTION, SIGN_IN_FAILED, SIGN_IN_SUCCESS, SIGN_UP_FAILED, SIGN_UP_SUCCESS, TOGGLE_LOADING_ACTION } from \"../actions/AuthActions\";\r\n\r\nconst initialState = {\r\n    auth: {\r\n        \"idToken\": \"\",\r\n        \"email\": \"\",\r\n        \"refreshToken\": \"\",\r\n        \"expiresIn\": \"\",\r\n        \"localId\": \"\"\r\n    },\r\n    successMessage:'',\r\n    errorMessage: '',\r\n    showLoading: false\r\n};\r\n\r\nexport default function AuthReducer(state = initialState, action) {\r\n    if (action.type === SIGN_UP_FAILED || action.type === SIGN_IN_FAILED) {\r\n        return {\r\n            ...state,\r\n            auth: {\r\n                \"idToken\": \"\",\r\n                \"email\": \"\",\r\n                \"refreshToken\": \"\",\r\n                \"expiresIn\": \"\",\r\n                \"localId\": \"\"                \r\n            },\r\n            successMessage: '',\r\n            errorMessage: action.payload,\r\n            showLoading: false\r\n        }\r\n    }\r\n\r\n    if(action.type === LOGOUT_ACTION){\r\n        return {\r\n            ...state,\r\n            auth: {\r\n                \"idToken\": \"\",\r\n                \"email\": \"\",\r\n                \"refreshToken\": \"\",\r\n                \"expiresIn\": \"\",\r\n                \"localId\": \"\"\r\n            },\r\n            successMessage: '',\r\n            errorMessage: '',\r\n            showLoading: false\r\n        }\r\n    }\r\n\r\n    if (action.type === SIGN_UP_SUCCESS) {\r\n        return {\r\n            ...state,\r\n            auth: action.payload,\r\n            successMessage: 'sign up successful',\r\n            errorMessage: '',\r\n            showLoading: false\r\n        }\r\n    }\r\n\r\n    if(action.type === SIGN_IN_SUCCESS){\r\n        return {\r\n            ...state,\r\n            auth: action.payload,\r\n            successMessage:'sign in successful',\r\n            errorMessage: '',\r\n            showLoading: false\r\n        }\r\n    }\r\n\r\n    if(action.type === TOGGLE_LOADING_ACTION){\r\n        return {\r\n            ...state,\r\n            showLoading: action.payload\r\n        }\r\n    }\r\n    return state;\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport PostsReducer from \"./reducers/PostsReducer\";\r\nimport AuthReducer from \"./reducers/AuthReducers\";\r\n\r\n// const exampleMiddleware = store => next => action => next(action)\r\n\r\n/* \r\nconst loggerMiddleware = store => next => action => {\r\n    console.log('dispatching action', action);\r\n    console.log('STATE BEFORE dispatching', store.getState());\r\n    let result = next(action);\r\n    console.log('STATE AFTER dispatching', store.getState());\r\n    return result;\r\n\r\n}\r\n\r\nconst fetchDataMiddleware = store => next => action => {\r\n    if (action.type === GET_POSTS) {\r\n        axios.get(`https://legacy-react-v17-default-rtdb.firebaseio.com/posts.json`)\r\n            .then(response => {\r\n                const postsResponse = response.data;\r\n                console.log('postsResponse', postsResponse);\r\n                // format the response and call get posts success\r\n                const posts = [];\r\n                for (const postId in postsResponse) {\r\n                    const post = {\r\n                        id: postId,\r\n                        ...postsResponse[postId]\r\n                    }\r\n                    posts.push(post);\r\n                }\r\n                store.dispatch(getPostsSuccessAction(posts));\r\n            })\r\n    }\r\n    return next(action);\r\n}\r\n*/\r\nconst middleware = applyMiddleware(thunk);\r\n\r\nconst composedEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst reducers = combineReducers({\r\n    posts:PostsReducer,\r\n    auth: AuthReducer\r\n});\r\nexport const store = createStore(reducers, composedEnhancers(middleware));\r\n\r\n\r\n/* \r\nfunction exampleMiddleWare(store) {\r\n    return function (next) {\r\n        return function (action) {\r\n            return next(action);\r\n        }\r\n    }\r\n}\r\n*/","export const isAuthenticated = (state)=>{\r\n    return state.auth.auth.idToken !== '';\r\n}","import { Link, withRouter } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../../store/selectors/AuthSelectors\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { logoutAction } from \"../../store/actions/AuthActions\";\r\n\r\nfunction Header(props) {\r\n    // console.log('Header', props);\r\n    const dispatch = useDispatch();\r\n\r\n    function onLogout(e) {\r\n        // e.preventDefault();\r\n        dispatch(logoutAction(props.history));\r\n        props.history.push('/sign-in');\r\n    }\r\n    return (<div>\r\n        {/* <p>header works!</p> */}\r\n        <div className=\"bg-red-500 text-white p-2 text-white flex items-center justify-between\" >\r\n            <h2 className=\"font-bold text-lg\" >React Router</h2>\r\n            <div className=\"\" >\r\n                <Link to='/' className=\"px-2\" >Home</Link>\r\n                {!props.isAuth &&\r\n                    <>\r\n                        <Link to='/sign-up' className=\"px-2\" >SignUp</Link>\r\n                        <Link to='/sign-in' className=\"px-2\" >SignIn</Link>\r\n                    </>\r\n                }\r\n                {props.isAuth &&\r\n                    <>\r\n                        <Link to='/posts' className=\"px-2\" >Posts</Link>\r\n\r\n                        <button className=\"px-2\"\r\n                            onClick={onLogout}>\r\n                            Logout\r\n                        </button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: isAuthenticated(state)\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps)(Header));","import { Suspense, lazy, useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport { checkAutoLogin } from './services/AuthService';\r\nimport { isAuthenticated } from './store/selectors/AuthSelectors';\r\n\r\n/* \r\nimport Home from './Pages/Home/Home';\r\nimport SignIn from './Pages/SignIn/SignIn';\r\nimport SignUp from './Pages/SignUp/SignUp';\r\nimport Posts from './components/Posts/Posts';\r\nimport CreatePost from './Pages/CreatePost/CreatePost';\r\n */\r\n\r\nconst SignUp = lazy(() => import(/* webpackChunkName: \"SignUp\" */ './Pages/SignUp/SignUp'));\r\nconst SignIn = lazy(()=> import(/* webpackChunkName: \"SignIn\" */ './Pages/SignIn/SignIn'));\r\nconst Home = lazy(()=> import(/* webpackChunkName: \"Home\" */ './Pages/Home/Home'));\r\nconst Posts = lazy(()=> import(/* webpackChunkName: \"Posts\" */ './components/Posts/Posts'));\r\nconst CreatePost = lazy(()=> import(/* webpackChunkName: \"CreatePost\" */ './Pages/CreatePost/CreatePost'));\r\n\r\nfunction App(props) {\r\n    // console.log('App', props);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        checkAutoLogin(dispatch, props.history);\r\n    })\r\n\r\n    let routes = (\r\n        <Switch>\r\n            <Route path='/sign-up' component={SignUp} />\r\n            <Route path='/sign-in' component={SignIn} />\r\n            <Route path='/' component={Home} />\r\n        </Switch>\r\n    )\r\n\r\n    if (props.isAuth) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path='/posts' component={Posts} />\r\n                <Route path='/create-post' component={CreatePost} />\r\n                <Route path='/' component={Home} exact />\r\n                <Redirect to='/posts' />\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <p>app works!</p> */}\r\n            <div>\r\n                <Header />\r\n                <div>\r\n                    <Suspense fallback={<p>loading...</p>} >\r\n                        {routes}\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: isAuthenticated(state)\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(App));\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store} >\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { deleteTokenFromLocalStorage, formatError, runLogoutTimer, saveTokenInLocalStorage, signIn, signUp } from \"../../services/AuthService\";\r\n\r\nexport const SIGN_UP_ACTION = '[signup] sign up';\r\nexport const SIGN_UP_SUCCESS = '[signup] sign up success';\r\nexport const SIGN_UP_FAILED = '[signup] sign up failed';\r\nexport const TOGGLE_LOADING_ACTION = '[loading] toggle loading';\r\n\r\n\r\nexport const SIGN_IN_ACTION = '[signin] sign in';\r\nexport const SIGN_IN_SUCCESS = '[signin] sign in success';\r\nexport const SIGN_IN_FAILED = '[signin] sign in failed';\r\n\r\nexport const LOGOUT_ACTION = '[logout] logout';\r\n\r\nexport function signUpAction(email, password, history) {\r\n    return (dispatch)=>{\r\n        return signUp(email, password)\r\n        .then(\r\n            response=>{\r\n                saveTokenInLocalStorage(response.data);\r\n                dispatch(signUpSuccess(response.data));\r\n                history.push('/');\r\n            }\r\n        ).catch(error=>{\r\n            const errorMsg = formatError(error.response.data);\r\n            dispatch(signUpFailed(errorMsg));\r\n        })\r\n        .finally(()=>{\r\n            dispatch(toggleLoadingAction(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport function signUpSuccess(data) {\r\n    return {\r\n        type: SIGN_UP_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function signUpFailed(message) {\r\n    return {\r\n        type: SIGN_UP_FAILED,\r\n        payload: message\r\n    }\r\n}\r\n\r\nexport function toggleLoadingAction(status) {\r\n    return {\r\n        type: TOGGLE_LOADING_ACTION,\r\n        payload: status\r\n    }\r\n}\r\n\r\nexport function signInAction(email, password, history) {\r\n    return (dispatch)=>{\r\n        signIn(email, password)\r\n        .then(response=>{\r\n            saveTokenInLocalStorage(response.data);\r\n            runLogoutTimer(dispatch, response.data.expiresIn, history);\r\n            dispatch(signInSuccess(response.data));\r\n            history.push('/posts');\r\n        })\r\n        .catch(e=>{\r\n            const errorResponse = e.response.data;\r\n            dispatch(signInFailed(errorResponse.error.message))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(toggleLoadingAction(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport function signInSuccess(data) {\r\n    return {\r\n        type: SIGN_IN_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function signInFailed(message) {\r\n    return {\r\n        type: SIGN_IN_FAILED,\r\n        payload: message\r\n    }\r\n}\r\n\r\nexport function logoutAction(history) {\r\n    deleteTokenFromLocalStorage();\r\n    // history.push('/');\r\n    return {\r\n        type: LOGOUT_ACTION\r\n    }\r\n}"],"sourceRoot":""}